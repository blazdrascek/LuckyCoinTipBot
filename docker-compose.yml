version: "3.9"

services:
  # Hard gate: refuse to let Postgres start if the data dir is empty or swapped.
  data-sentinel:
    image: postgres:16 # contains pg_controldata for system-identifier check
    container_name: tipbot-data-sentinel
    restart: unless-stopped
    volumes:
      - tipbot_data:/var/lib/postgresql/data
    command:
      - /bin/sh
      - -lc
      - >
        set -euo pipefail;
        D=/var/lib/postgresql/data;
        if [ ! -s "$D/PG_VERSION" ]; then
          echo "[sentinel] FATAL: $D is empty (PG_VERSION missing). Refusing init.";
          exit 42;
        fi;
        SYSID_FILE="$D/TIPBOT_SYSID";
        CUR=$(/usr/lib/postgresql/16/bin/pg_controldata "$D" | awk -F': *' '/Database system identifier/{print $2}');
        if [ -s "$SYSID_FILE" ]; then
          OLD=$(cat "$SYSID_FILE");
          if [ "$OLD" != "$CUR" ]; then
            echo "[sentinel] FATAL: system identifier changed ($OLD -> $CUR). Refusing start.";
            exit 43;
          fi;
        else
          echo "$CUR" > "$SYSID_FILE";
        fi;
        touch "$D/TIPBOT_SAFEGUARD";
        echo "[sentinel] OK: cluster present & id verified.";
        exit 0
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "test -s /var/lib/postgresql/data/PG_VERSION -a -s /var/lib/postgresql/data/TIPBOT_SYSID -a -f /var/lib/postgresql/data/TIPBOT_SAFEGUARD",
        ]
      interval: 5s
      timeout: 3s
      retries: 30
    logging:
      driver: "json-file"
      options: { max-size: "1m", max-file: "2" }

  postgres:
    image: postgres:16
    container_name: tipbot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tipbot
      TZ: UTC
    ports:
      - "5432:5432"
    depends_on:
      data-sentinel:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tipbot"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - tipbot_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d:ro
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "5" }

  # Blocks the app unless the DB has real tip rows (prevents “deposit-only fresh DB”).
  db-guard:
    image: postgres:16
    container_name: tipbot-db-guard
    restart: unless-stopped
    env_file: .env
    environment:
      PGPASSWORD: postgres
      TZ: UTC
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - /bin/sh
      - -lc
      - >
        set -euo pipefail;
        DB="$${DATABASE_URL##*/}";
        echo "[db-guard] Checking DB: $$DB";
        for i in $$(seq 1 90); do
          if psql -h postgres -U postgres -d "$$DB" -tAc "SELECT 1" >/dev/null 2>&1; then
            HAS_TIPS=$$(psql -h postgres -U postgres -d "$$DB" -tAc "SELECT COUNT(*) FROM ledger WHERE reason IN ('tip_in','tip_out')" || echo 0);
            echo "[db-guard] has_tips=$$HAS_TIPS";
            if [ "$$HAS_TIPS" -ge 1 ]; then
              echo "[db-guard] OK"; touch /tmp/healthy; break;
            fi
          fi;
          echo "[db-guard] not ready, retry=$$i"; sleep 2;
        done;
        exec tail -f /dev/null
    healthcheck:
      test: ["CMD-SHELL", "test -f /tmp/healthy"]
      interval: 5s
      timeout: 3s
      retries: 30
    logging:
      driver: "json-file"
      options: { max-size: "2m", max-file: "3" }

  bot:
    build: .
    container_name: tipbot-bot
    restart: unless-stopped
    env_file: .env
    environment:
      PGOPTIONS: >-
        -c search_path=public
        -c default_transaction_read_only=off
        -c statement_timeout=15s
        -c lock_timeout=3s
        -c idle_in_transaction_session_timeout=10s
        -c client_min_messages=warning
      TZ: UTC
    depends_on:
      postgres:
        condition: service_healthy
      db-guard:
        condition: service_healthy
    init: true
    command: ["npm", "run", "start:bot"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "5" }

  worker:
    build: .
    container_name: tipbot-worker
    restart: unless-stopped
    env_file: .env
    environment:
      PGOPTIONS: >-
        -c search_path=public
        -c default_transaction_read_only=off
        -c statement_timeout=15s
        -c lock_timeout=3s
        -c idle_in_transaction_session_timeout=10s
        -c client_min_messages=warning
      TZ: UTC
    depends_on:
      postgres:
        condition: service_healthy
      db-guard:
        condition: service_healthy
    init: true
    command: ["npm", "run", "start:worker"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "5" }

volumes:
  tipbot_data:
    external: true
    name: tipbot_pg_sql_2025_08_31_031701
