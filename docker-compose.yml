# docker-compose.yml  (clean & hardened)
services:
  postgres:
    image: postgres:16
    container_name: tipbot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tipbot
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d tipbot_restore_2025_09_06 || pg_isready -U postgres -d tipbot",
        ]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - tipbot_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d:ro
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "5" }

  bot:
    build: .
    container_name: tipbot-bot
    restart: unless-stopped
    env_file: .env
    environment:
      # Per-session safety valves at the server side even if app code forgets:
      PGOPTIONS: >-
        -c search_path=public
        -c default_transaction_read_only=off
        -c statement_timeout=15s
        -c lock_timeout=3s
        -c idle_in_transaction_session_timeout=10s
        -c client_min_messages=warning
      TZ: UTC
    depends_on:
      postgres:
        condition: service_healthy
    init: true
    # Guard before starting the bot
    command: ["/bin/sh", "-lc", "./scripts/guard_db.sh && npm run start:bot"]
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "5" }

  worker:
    build: .
    container_name: tipbot-worker
    restart: unless-stopped
    env_file: .env
    environment:
      PGOPTIONS: >-
        -c search_path=public
        -c default_transaction_read_only=off
        -c statement_timeout=15s
        -c lock_timeout=3s
        -c idle_in_transaction_session_timeout=10s
        -c client_min_messages=warning
      TZ: UTC
    depends_on:
      postgres:
        condition: service_healthy
    init: true
    # Bootstrap logic is in the worker; guard first anyway
    command: ["/bin/sh", "-lc", "./scripts/guard_db.sh && npm run start:worker"]
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "5" }

volumes:
  tipbot_data:
    external: true
    name: tipbot_pg_sql_2025_08_31_031701
